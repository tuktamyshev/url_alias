"""user and url

Revision ID: 1a29acd80ba3
Revises:
Create Date: 2025-06-03 09:27:51.635871

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1a29acd80ba3"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("username", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_user")),
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "url",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_uuid", sa.UUID(), nullable=False),
        sa.Column("original_url", sa.String(length=1024), nullable=False),
        sa.Column("alias", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("clicks_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_uuid"], ["user.uuid"], name=op.f("fk_url_user_uuid_user"), ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_url")),
        sa.UniqueConstraint("alias", name=op.f("uq_url_alias")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("url")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
